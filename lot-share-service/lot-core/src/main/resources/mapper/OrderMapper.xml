<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="space.qmen.lot.dao.OrderDao">

    <resultMap id="BaseResultMap" type="space.qmen.lot.entity.Order">
        <result column="id" property="id" />
        <result column="order_type" property="orderType" />
        <result column="order_description" property="orderDescription" />
        <result column="unit_price" property="unitPirce" />
        <result column="duration" property="duration" />
        <result column="expected_payment" property="expectedPayment" />
        <result column="reduction" property="reduction" />
        <result column="reduction_description" property="reductionDescription" />
        <result column="pre_payment" property="prePayment" />
        <result column="f_pre_payment_bill_id" property="fPrePaymentBillId" />
        <result column="actual_payment" property="actualPayment" />
        <result column="f_actual_payment_bill_id" property="fActualPaymentId" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
        <result column="status" property="status" />
    </resultMap>

    <parameterMap id="Order" type="space.qmen.lot.entity.Order"/>
    <sql id="Base_Column_List">
        id,
        order_type,order_description,
        unit_price, duration, expected_payment,
        reduction, reduction_description,
        pre_payment, f_pre_payment_bill_id,
        actual_payment, f_actual_payment_bill_id,
        gmt_create, gmt_modified,
        status
    </sql>


    <!-- 根据id获取账单 -->
    <select id="getOrderById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from `order`
        where id = #{id}
    </select>

    <!-- 显示所有账单 -->
    <select id="listOrder" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `order`
    </select>

    <!-- 新增订单 -->
    <insert id="saveOrder" parameterMap="Order" useGeneratedKeys="true" keyProperty="id">
        insert into
        `order`
        (id, order_type)
        values
        (null,#{orderType})
    </insert>

    <!-- 新增车位租用状态 -->
    <insert id="saveOrderRentingStatus" parameterType="space.qmen.lot.param.OrderRentingParam" useGeneratedKeys="true" keyProperty="id">
        insert into
          lk_space_day_renting_status
        <trim prefix="(" suffix=")" suffixOverrides=",">
            date_begin,
            date_end,
            period_type,
            f_renter_id,
            f_space_id,
            f_vehicle_id,
            <if test="ruleId != null">f_rule_id,</if>
        </trim>

        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{dateBegin},
            #{dateEnd},
            #{periodType},
            #{renterId},
            #{spaceId},
            #{vehicleId},
            <if test="ruleId != null">
                #{ruleId},
            </if>
        </trim>
    </insert>

    <!-- 进紧接上一步新增订单 -->
    <insert id="saveOrderFirstly" useGeneratedKeys="true" keyProperty="id">
        insert into `order`(order_type, f_renting_status_id)
        values(0, (SELECT LAST_INSERT_ID()))
    </insert>


    <!--更新账单-->
    <update id="updateOrder" parameterMap="Order">
        update `order`
        set
        <if test="orderDescription!=null">
            order_description = #{orderDescription},
        </if>
        gmt_modified = CURRENT_TIMESTAMP
        where
        id = #{id}
    </update>

    <!-- 取消订单 -->
    <update id="updateOrderStatus" parameterType="java.lang.Long">
        update `order`
        set `status` = 2
        where id = #{orderId}
    </update>
    <!-- 取消租用状态 -->
    <update id="updateRuleStatus" parameterType="java.lang.Long">
        update lk_space_day_renting_status AS day_rentings
        set day_rentings.is_deleted = 1
        where id = (
          select f_renting_status_id
          from `order`
          where `order`.id = #{orderId}
        )
    </update>


    <!-- 删除账单 -->
    <delete id="deleteOrder" parameterType="java.lang.Long">
        delete from
        `order`
        where
        id = #{id}
    </delete>

    <parameterMap id="ListOrderParam" type="space.qmen.lot.param.OrderParam"/>
    <resultMap id="OwnerOrderMap" type="space.qmen.lot.dto.OwnerOrderDTO">
        <result column="date_begin" property="dateBegin" />
        <result column="date_end" property="dateEnd" />
        <result column="period_type" property="periodType" />
        <result column="renter_name" property="renterName" />
        <result column="icon" property="icon" />
        <result column="community_name" property="communityName" />
        <result column="morning_begin_time" property="morningBeginTime" />
        <result column="morning_end_time" property="morningEndTime" />
        <result column="afternoon_begin_time" property="afternoonBeginTime" />
        <result column="afternoon_end_time" property="afternoonEndTime" />
        <result column="plate_num" property="plateNum" />
        <result column="actual_payment" property="actualPayment" />
        <result column="timeout_payment" property="timeoutPayment" />
        <result column="duration" property="duration" />
        <result column="order_id" property="orderId" />
        <result column="order_status" property="orderStatus" />
    </resultMap>
    <select id="listOrderByOwnerId" resultMap="OwnerOrderMap" parameterMap="ListOrderParam">
        select
          day_rentings.date_begin,
          day_rentings.date_end,
          day_rentings.period_type,
            `user`.`real_name` AS renter_name,
          `user`.icon,
          community.`name` AS community_name,
          `space`.`code` AS space_code,
          policy.morning_begin_time,
          policy.morning_end_time,
          policy.afternoon_begin_time,
          policy.afternoon_end_time,
          vehicle.plate_num,
          `order`.id AS order_id,
          `order`.actual_payment,
          `order`.timeout_payment,
          `order`.duration,
          `order`.`status` AS order_status
        from
            lk_community_policy AS policy,
          community,
          `space`,
          `user`,
          lk_space_day_renting_status AS day_rentings,
          lk_user_community_zone_space AS uczs,
          vehicle,
          `order`
        where
          `order`.f_renting_status_id = day_rentings.id
          AND day_rentings.f_renter_id = `user`.id
          AND uczs.f_community_id = policy.f_community_id
          AND day_rentings.f_space_id = uczs.f_space_id
          AND uczs.f_community_id = community.id

            <if test="userId!=null">
            AND uczs.f_owner_id = #{userId}
            </if>
          <if test="renterId!=null">
          AND day_rentings.f_renter_id = #{renterId}
          </if>
          <if test="orderStatus!=null">
          AND `order`.`status` = #{orderStatus}
          </if>
        AND day_rentings.f_space_id = `space`.id
        AND day_rentings.f_vehicle_id = vehicle.id
        order by `order`.gmt_create
    </select>

    <!-- 某小区的历史交易订单次数 -->
    <select id="getOrderHistoryNum" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select
          count(*)
        from
          `order`,
          lk_space_day_renting_status AS day_rentings,
          lk_user_community_zone_space As uczs
        where

          `order`.f_renting_status_id = day_rentings.id
          AND day_rentings.f_space_id = uczs.f_space_id
          AND uczs.f_community_id = #{communityId}
          AND `order`.status != 2
    </select>

    <!-- 车位的历史订单 -->
    <select id="listSpaceHistoryOrder" resultType="space.qmen.lot.vo.OrderHistoryOrderVO" parameterType="java.lang.Long">
        SELECT
            `order`.order_type,
          `order`.`status` AS order_status,
          bill.bill_amount,
          day_rentings.period_type,
            day_rentings.date_begin,
            day_rentings.date_end,
          policy.morning_begin_time,
          policy.morning_end_time,
          policy.afternoon_begin_time,
          policy.afternoon_end_time,
            `order`.order_level,
          `order`.order_score
        FROM
            `order`,
            lk_space_day_renting_status AS day_rentings,
            bill,
          lk_community_policy AS policy,
          lk_user_community_zone_space AS uczs
        WHERE
            `order`.f_renting_status_id = day_rentings.id
            AND uczs.f_space_id = day_rentings.f_space_id
          AND uczs.f_community_id = policy.f_community_id
          AND `order`.f_actual_payment_bill_id = bill.id
          AND day_rentings.f_space_id = #{spaceId};
    </select>


</mapper>
