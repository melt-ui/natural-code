{"version":3,"sources":["webpack:///./src/pages/sanTest/css/hello.scss?c0a6","webpack:///./src/pages/sanTest/css/hello.scss","webpack:///external \"window.$\"","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_timers-browserify@2.0.10@timers-browserify/main.js","webpack:///./node_modules/_setimmediate@1.0.5@setimmediate/setImmediate.js","webpack:///./node_modules/_style-loader@0.19.1@style-loader/lib/urls.js","webpack:///./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js","webpack:///./node_modules/_process@0.11.10@process/browser.js","webpack:///./src/pages/sanTest/index.js","webpack:///./node_modules/_san@3.6.0@san/dist/san.dev.js","webpack:///./node_modules/_style-loader@0.19.1@style-loader/lib/addStyles.js","webpack:///./node_modules/_number-precision@1.2.0@number-precision/build/index.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","locals","exports","push","window","$","g","this","Function","eval","e","global","scope","self","apply","prototype","Timeout","id","clearFn","_id","_clearFn","setTimeout","call","arguments","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","process","undefined","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","Object","getPrototypeOf","toString","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","data","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","Math","random","source","indexOf","slice","length","addEventListener","attachEvent","callback","args","Array","task","run","css","location","Error","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","o","$1","test","JSON","stringify","useSourceMap","list","map","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","sourceURLs","sources","sourceRoot","concat","join","cssWithMappingToString","modules","mediaQuery","alreadyImportedModules","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","marker","runClearTimeout","Item","array","noop","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","_numberPrecision","_interopRequireDefault","_jquery","console","log","support","MyApp","san","defineComponent","template","myApp","attach","body","NP","strip","plus","minus","times","divide","round","root","guidIndex","guidPrefix","Date","getTime","guid","empty","extend","target","key","hasOwnProperty","value","inherits","subClass","superClass","subClassProto","F","constructor","each","iterator","l","bind","func","thisArg","nativeBind","el","eventName","listener","capture","splitStr2Obj","result","split","svgTags","createEl","tagName","createElementNS","removeEl","parentNode","nextHandler","nextTasks","isNativePromise","Promise","fn","tasks","port","resolve","then","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","obj","nodeType","toLowerCase","createChainableChecker","validate","chainedChecker","isRequired","checkType","dataName","componentName","fullDataName","dataValue","dataType","createPrimaryTypeChecker","type","DataTypes","Walker","index","createANode","textExpr","directives","props","events","children","kebab2camel","alpha","toUpperCase","any","object","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","oneOfType","expectedEnumOfTypeValues","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","start","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","isMatchStart","lastIndex","exec","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","OBJECT","ARRAY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","readEqualityExpr","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","readString","readNumber","readParenthesizedExpr","arrItems","spread","items","objItems","walkerIndexBeforeName","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","c","parseText","delimiters","exprMatch","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","delimEndLen","interpSource","interpLen","directiveParsers","for","if","elif","else","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","colonIndex","modifier","parser","parseDirective","integrateProp","vars","xMatch","x","seg","getXPath","stack","currentTagName","path","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","splice","tbodyNode","DEFAULT_FILTERS","url","_class","_style","_sep","sep","evalExpr","owner","dataCache","get","leftValue","rightValue","itemValue","filter","filterName","evalArgs","buf","set","dataCacheSource","dataCacheClearly","clear","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","max","filterResult","DataChangeType","lifeCycleOwnIs","LifeCycle","compiled","is","inited","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","state","oper","bindValue","bindType","bindChecked","hintExpr","analInputCheckedState","option","parentSelect","parent","selectValue","isOptionSelected","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","checkDataTypes","setTypeChecker","listen","unlisten","fire","silent","silence","quiet","callee","exprRaw","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","pop","shift","unshift","removeAt","remove","isBrowser","insertBefore","targetEl","parentEl","beforeEl","warnSetHTML","noSetHTML","message","warn","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","createTextNode","createComment","tempFlag","insertAdjacentHTML","dispose","_prev","textUpdateProp","textContent","unionKeys","obj1","obj2","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","next","child","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","nodeSBindInit","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","sBind","_sbindData","nodeSBindUpdate","updater","newBindData","keys","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","components","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","genElementChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","initData","me","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","directive","createForDirectiveChild","itemScope","itemANode","param","_create","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","j","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","varKeys","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","originalUpdate","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","parentFirstChild","parentLastChild","lastChild","isOnlyParentChild","newList","newLen","cIndex","cLen","forLen","changeIndex","_splice","_set","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","cmptGivenTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","_isInitFromEl","enter","removeEventListener","detachEvent","emitDevtool","arg","debug","__san_devtool__","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","componentPreheat","protoANode","givenNamedSlotBinds","binds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","dataTypes","dataTypeChecker","dataTypeName","createDataTypesChecker","computedDeps","_calcComputed","dataChanger","_dataChanger","proto","componentClass","_cmptReady","tpl","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","_callHook","declaration","un","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","elementTraversal","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","_aftercreated","dataExpr","memo","stylesInDom","isOldIE","all","atob","getElement","selector","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","parts","addStyle","listToStyles","newStyles","base","part","media","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","addAttrs","forEach","update","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","newObj","DEBUG","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","childNodes","num","precision","parseFloat","toPrecision","digitLength","eSplit","float2Fixed","Number","dLen","pow","checkBoundary","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","num1","num2","others","_i","num1Changed","num2Changed","baseNum","ratio","defineProperty"],"mappings":"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","file":"static/js/src/pages/sanTest/index.pug.bundle.b3901f97e89b23f78a04.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js!../../../../node_modules/_postcss-loader@2.1.5@postcss-loader/lib/index.js??ref--3-3!./hello.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/_style-loader@0.19.1@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js!../../../../node_modules/_postcss-loader@2.1.5@postcss-loader/lib/index.js??ref--3-3!./hello.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js!../../../../node_modules/_postcss-loader@2.1.5@postcss-loader/lib/index.js??ref--3-3!./hello.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/sanTest/css/hello.scss\n// module id = +9k6\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\n.hello {\\n  color: red;\\n} \\n*/\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader!./node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js!./node_modules/_postcss-loader@2.1.5@postcss-loader/lib??ref--3-3!./src/pages/sanTest/css/hello.scss\n// module id = /TDW\n// module chunks = 1","module.exports = window.$;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"window.$\"\n// module id = 0iPh\n// module chunks = 1 2 3 5","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9AUj\n// module chunks = 1","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_timers-browserify@2.0.10@timers-browserify/main.js\n// module id = 9r/T\n// module chunks = 1","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_setimmediate@1.0.5@setimmediate/setImmediate.js\n// module id = AYvJ\n// module chunks = 1","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_style-loader@0.19.1@style-loader/lib/urls.js\n// module id = IkL0\n// module chunks = 1 2 3","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\n// module id = UTlt\n// module chunks = 1 2 3","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_process@0.11.10@process/browser.js\n// module id = V0EG\n// module chunks = 1","import './css/hello.scss'\nimport NP from 'number-precision'\nimport $ from 'jquery'\nconsole.log($.support)\n\nconst MyApp = san.defineComponent({\n  template: `\n                <div>\n                    <input type=\"text\" value=\"{=name=}\">\n                    <p class=\"hello\">Hello {{name}}!</p>\n                </div>\n            `\n});\n\n// 挂载\nlet myApp = new MyApp({\n  data: {\n    name: 'San'\n  }\n});\nmyApp.attach(document.body);\n\n\nconsole.log(NP.strip(0.09999999999999998)); // = 0.1\nconsole.log(NP.plus(0.1, 0.2));             // = 0.3, not 0.30000000000000004\nconsole.log(NP.plus(2.3, 2.4));             // = 4.7, not 4.699999999999999\nconsole.log(NP.minus(1.0, 0.9));            // = 0.1, not 0.09999999999999998\nconsole.log(NP.times(3, 0.3));              // = 0.9, not 0.8999999999999999\nconsole.log(NP.times(0.362, 100));          // = 36.2, not 36.199999999999996\nconsole.log(NP.divide(1.21, 1.1));          // = 1.1, not 1.0999999999999999\nconsole.log(NP.round(0.105, 2));            // = 0.11, not 0.1\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sanTest/index.js","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n * 未指定字符时，当遇到第一个非空格、制表符的字符停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            // 空格 space\n            case 32:\n            // 制表符 tab\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @param {boolean} isMatchStart 是否必须匹配当前位置\n * @return {Array?}\n */\nWalker.prototype.match = function (reg, isMatchStart) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match && (!isMatchStart || this.index === match.index)) {\n        this.index = reg.lastIndex;\n        return match;\n    }\n};\n\n// exports = module.exports = Walker;\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10,\n    OBJECT: 11,\n    ARRAY: 12\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        // 处理字符转义\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: +match[1]\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n * 这里的 ident 指标识符(identifier)，也就是通常意义上的变量名\n * 这里默认的变量名规则为：由美元符号($)、数字、字母或者下划线(_)构成的字符串\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig, 1);\n\n    // #[begin] error\n    if (!match) {\n        throw new Error('[SAN FATAL] expect an ident: ' + walker.cut(walker.index));\n    }\n    // #[end]\n\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n\n        // number\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n\n        case 40: // (\n            return readParenthesizedExpr(walker);\n\n        // array literal\n        case 91: // [\n            walker.go(1);\n            var arrItems = [];\n            while (!walker.goUntil(93)) { // ]\n                var item = {};\n                arrItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                }\n\n                item.expr = readTertiaryExpr(walker);\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: ExprType.ARRAY,\n                items: arrItems\n            };\n\n        // object literal\n        case 123: // {\n            walker.go(1);\n            var objItems = [];\n\n            while (!walker.goUntil(125)) { // }\n                var item = {};\n                objItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                    item.expr = readTertiaryExpr(walker);\n                }\n                else {\n                    // #[begin] error\n                    var walkerIndexBeforeName = walker.index;\n                    // #[end]\n\n                    item.name = readUnaryExpr(walker);\n\n                    // #[begin] error\n                    if (item.name.type > 4) {\n                        throw new Error('[SAN FATAL] unexpect object name: ' + walker.cut(walkerIndexBeforeName, walker.index));\n                    }\n                    // #[end]\n\n                    if (walker.goUntil(58)) { // :\n                        item.expr = readTertiaryExpr(walker)\n                    }\n                    else {\n                        item.expr = item.name;\n                    }\n\n                    if (item.name.type === ExprType.ACCESSOR) {\n                        item.name = item.name.paths[0];\n                    }\n                }\n\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: ExprType.OBJECT,\n                items: objItems\n            };\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    var delimEndLen = delimiters[1].length;\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        var interpSource = exprMatch[1];\n        var interpLen = exprMatch[0].length;\n        if (walker.cut(walker.index + 1 - delimEndLen, walker.index + 1) === delimiters[1]) {\n            interpSource += walker.cut(walker.index, walker.index + 1);\n            walker.go(1);\n            interpLen++;\n        }\n\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - interpLen\n        ));\n\n        var interp = parseInterp(interpSource);\n        expr.original = expr.original || interp.original;\n        expr.segs.push(interp);\n\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'bind': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var extend = require('../util/extend');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ARRAY:\n                value = [];\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && (value = value.concat(itemValue));\n                    }\n                    else {\n                        value.push(itemValue);\n                    }\n                }\n                break;\n\n            case ExprType.OBJECT:\n                value = {};\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && extend(value, itemValue);\n                    }\n                    else {\n                        value[evalExpr(item.name, data, owner)] = itemValue;\n                    }\n                }\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.ARRAY:\n        case ExprType.OBJECT:\n            for (var i = 0, l = expr.items.length; i < l; i++) {\n                if (changeExprCompare(changeExpr, expr.items[i].expr, data)) {\n                    return 1;\n                }\n            }\n\n            return 0;\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        value = value == null ? '' : value\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        var len = target.length;\n        if (index > len) {\n            index = len;\n        }\n        else if (index < 0) {\n            index = len + index;\n            if (index < 0) {\n                index = 0;\n            }\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 计算两个对象 key 的并集\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 计算两个对象 key 的并集\n *\n * @param {Object} obj1 目标对象\n * @param {Object} obj2 源对象\n * @return {Array}\n */\nfunction unionKeys(obj1, obj2) {\n    var result = [];\n\n    for (var key in obj1) {\n        result.push(key);\n    }\n\n    for (var key in obj2) {\n        !obj1[key] && result.push(key);\n    }\n\n    return result;\n}\n\n// exports = module.exports = unionKeys;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var unionKeys = require('../util/union-keys');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    nodeSBindInit(this, aNode.directives.bind);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    // update s-bind\n    var me = this;\n    nodeSBindUpdate(\n        this,\n        this.aNode.directives.bind,\n        changes,\n        function (name, value) {\n            if (name in me.aNode.hotspot.props) {\n                return;\n            }\n\n            getPropHandler(me.tagName, name).prop(me.el, value, name, me);\n        }\n    );\n\n    // update prop\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    // update content\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        var len = changes.length;\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, htmlDirective.value, this.scope)) {\n                // #[begin] error\n                warnSetHTML(this.el);\n                // #[end]\n\n                this.el.innerHTML = evalExpr(htmlDirective.value, this.scope, this.owner);\n                return false;\n            }\n        }\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 初始化节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n */\nfunction nodeSBindInit(node, sBind) {\n    if (sBind && node.scope) {\n        node._sbindData = evalExpr(sBind.value, node.scope, node.owner);\n        return true;\n    }\n}\n\n// exports = module.exports = nodeSBindInit;\n\n\n/**\n * @file 更新节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var unionKeys = require('../util/union-keys');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n */\nfunction nodeSBindUpdate(node, sBind, changes, updater) {\n    if (sBind) {\n        var len = changes.length;\n\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, sBind.value, node.scope)) {\n                var newBindData = evalExpr(sBind.value, node.scope, node.owner);\n                var keys = unionKeys(newBindData, node._sbindData);\n\n                for (var i = 0, l = keys.length; i < l; i++) {\n                    var key = keys[i];\n                    var value = newBindData[key];\n\n                    if (value !== node._sbindData[key]) {\n                        updater(key, value);\n                    }\n                }\n\n                node._sbindData = newBindData;\n                break;\n            }\n\n        }\n    }\n}\n\n// exports = module.exports = nodeSBindUpdate;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    realANode.directives = aNode.directives;\n\n    var initData;\n    if (nodeSBindInit(this, aNode.directives.bind)) {\n        initData = extend({}, me._sbindData);\n    }\n\n    if (realANode.vars) {\n        initData = initData || {};\n        each(realANode.vars, function (varItem) {\n            initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n        });\n    }\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (initData) {\n        this.isScoped = true;\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            var varKeys = {};\n            each(this.aNode.vars, function (varItem) {\n                varKeys[varItem.name] = 1;\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n            var scopedChanges = [];\n\n            nodeSBindUpdate(\n                this,\n                this.aNode.directives.bind,\n                changes,\n                function (name, value) {\n                    if (varKeys[name]) {\n                        return;\n                    }\n\n                    me.childScope.set(name, value);\n                    scopedChanges.push({\n                        type: DataChangeType.SET,\n                        expr: createAccessor([\n                            { type: ExprType.STRING, value: name }\n                        ]),\n                        value: value,\n                        option: {}\n                    });\n                }\n            );\n\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var key in this._sbindData) {\n            getPropHandler(this.tagName, key).prop(this.el, this._sbindData[key], key, this);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var directive = element.aNode.directives.transition;\n    var owner = element.owner;\n\n    if (element.nodeType === NodeType.CMPT) {\n        var cmptGivenTransition = element.givenANode && element.givenANode.directives.transition;\n        if (cmptGivenTransition) {\n            directive = cmptGivenTransition;\n        }\n        else {\n            owner = element;\n        }\n    }\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var DataChangeType = require('../runtime/data-change-type');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n\n    if (options.transition) {\n        this.transition = options.transition;\n    }\n\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n\n        // init s-bind data\n        nodeSBindInit(this, this.givenANode.directives.bind);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data || this._sbindData\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n        this['_after' + name] = 1;\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        nodeSBindUpdate(\n            this,\n            this.givenANode.directives.bind,\n            changes,\n            function (name, value) {\n                if (name in me.givenANode.hotspot.props) {\n                    return;\n                }\n\n                me.data.set(name, value, {\n                    target: {\n                        id: me.owner.id\n                    }\n                });\n            }\n        );\n\n\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n                        updateExpr = changeExpr;\n                    }\n\n                    if (relation >= 2 && change.type === DataChangeType.SPLICE) {\n                        me.data.splice(setExpr, [change.index, change.deleteCount].concat(change.insertions), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                    else {\n                        me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.created && this._aftercreated) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), !/^(html|bind)$/.test(key));\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成数组字面量代码\n//      *\n//      * @param {Object} arrayExpr 数组字面量表达式对象\n//      * @return {string}\n//      */\n//     array: function (arrayExpr) {\n//         var code = [];\n// \n//         each(arrayExpr.items, function (item) {\n//             code.push((item.spread ? '...' : '') + compileExprSource.expr(item.expr));\n//         });\n// \n//         return '[\\n' + code.join(',\\n') + '\\n]';\n//     },\n// \n//     /**\n//      * 生成对象字面量代码\n//      *\n//      * @param {Object} objExpr 对象字面量表达式对象\n//      * @return {string}\n//      */\n//     object: function (objExpr) {\n//         var code = [];\n// \n//         each(objExpr.items, function (item) {\n//             if (item.spread) {\n//                 code.push('...' + compileExprSource.expr(item.expr));\n//             }\n//             else {\n//                 code.push(compileExprSource.expr(item.name) + ':' + compileExprSource.expr(item.expr));\n//             }\n//         });\n// \n//         return '{\\n' + code.join(',\\n') + '\\n}';\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n// \n//             case ExprType.ARRAY:\n//                 return compileExprSource.array(expr);\n// \n//             case ExprType.OBJECT:\n//                 return compileExprSource.object(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, bindDirective) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         if (bindDirective) {\n//             sourceBuffer.addRaw(\n//                 '(function ($bindObj) {for (var $key in $bindObj) {'\n//                 + 'var $value = $bindObj[$key];'\n//             );\n// \n//             if (tagName === 'textarea') {\n//                 sourceBuffer.addRaw(\n//                     'if ($key === \"value\") {'\n//                     + 'continue;'\n//                     + '}'\n//                 );\n//             }\n// \n//             sourceBuffer.addRaw('switch ($key) {\\n'\n//                 + 'case \"readonly\":\\n'\n//                 + 'case \"disabled\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'html += boolAttrFilter($key, escapeHTML($value));\\n'\n//                 + 'break;\\n'\n//                 + 'default:\\n'\n//                 + 'html += attrFilter($key, escapeHTML($value));'\n//                 + '}'\n//             );\n// \n//             sourceBuffer.addRaw(\n//                 '}})('\n//                 + compileExprSource.expr(bindDirective.value)\n//                 + ');'\n//             );\n//         }\n// \n//         sourceBuffer.joinString('>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType\n//                 ? owner.getComponentType(aNode)\n//                 : owner.components[aNode.tagName];\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n// \n//         if (aNode.vars || aNode.directives.bind) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n// \n//             if (aNode.directives.bind) {\n//                 sourceBuffer.addRaw('extend($slotCtx.data, ' + compileExprSource.expr(aNode.directives.bind.value) + ');'); // eslint-disable-line\n//             }\n// \n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop,\n//             aNode.directives.bind\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         var givenDataHTML = '{' + givenData.join(',\\n') + '}';\n//         if (aNode.directives.bind){\n//             givenDataHTML = 'extend('\n//                 + compileExprSource.expr(aNode.directives.bind.value)\n//                  + ', '\n//                 + givenDataHTML\n//                 + ')';\n//         }\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')(' + givenDataHTML + ', componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp,\n//         component.aNode.directives.bind\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.6.0';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.6.0',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_san@3.6.0@san/dist/san.dev.js\n// module id = hXNw\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_style-loader@0.19.1@style-loader/lib/addStyles.js\n// module id = p71M\n// module chunks = 1 2 3","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * @file 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\r\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\r\n */\r\n/**\r\n * 把错误的数据转正\r\n * strip(0.09999999999999998)=0.1\r\n */\r\nfunction strip(num, precision) {\r\n    if (precision === void 0) { precision = 12; }\r\n    return +parseFloat(num.toPrecision(precision));\r\n}\r\n/**\r\n * Return digits length of a number\r\n * @param {*number} num Input number\r\n */\r\nfunction digitLength(num) {\r\n    // Get digit length of e\r\n    var eSplit = num.toString().split(/[eE]/);\r\n    var len = (eSplit[0].split('.')[1] || '').length - (+(eSplit[1] || 0));\r\n    return len > 0 ? len : 0;\r\n}\r\n/**\r\n * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\r\n * @param {*number} num 输入数\r\n */\r\nfunction float2Fixed(num) {\r\n    if (num.toString().indexOf('e') === -1) {\r\n        return Number(num.toString().replace('.', ''));\r\n    }\r\n    var dLen = digitLength(num);\r\n    return dLen > 0 ? num * Math.pow(10, dLen) : num;\r\n}\r\n/**\r\n * 检测数字是否越界，如果越界给出提示\r\n * @param {*number} num 输入数\r\n */\r\nfunction checkBoundary(num) {\r\n    if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\r\n        console.warn(num + \" is beyond boundary when transfer to integer, the results may not be accurate\");\r\n    }\r\n}\r\n/**\r\n * 精确乘法\r\n */\r\nfunction times(num1, num2) {\r\n    var others = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        others[_i - 2] = arguments[_i];\r\n    }\r\n    if (others.length > 0) {\r\n        return times.apply(void 0, [times(num1, num2), others[0]].concat(others.slice(1)));\r\n    }\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    var baseNum = digitLength(num1) + digitLength(num2);\r\n    var leftValue = num1Changed * num2Changed;\r\n    checkBoundary(leftValue);\r\n    return leftValue / Math.pow(10, baseNum);\r\n}\r\n/**\r\n * 精确加法\r\n */\r\nfunction plus(num1, num2) {\r\n    var others = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        others[_i - 2] = arguments[_i];\r\n    }\r\n    if (others.length > 0) {\r\n        return plus.apply(void 0, [plus(num1, num2), others[0]].concat(others.slice(1)));\r\n    }\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\r\n}\r\n/**\r\n * 精确减法\r\n */\r\nfunction minus(num1, num2) {\r\n    var others = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        others[_i - 2] = arguments[_i];\r\n    }\r\n    if (others.length > 0) {\r\n        return minus.apply(void 0, [minus(num1, num2), others[0]].concat(others.slice(1)));\r\n    }\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\r\n}\r\n/**\r\n * 精确除法\r\n */\r\nfunction divide(num1, num2) {\r\n    var others = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        others[_i - 2] = arguments[_i];\r\n    }\r\n    if (others.length > 0) {\r\n        return divide.apply(void 0, [divide(num1, num2), others[0]].concat(others.slice(1)));\r\n    }\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    checkBoundary(num1Changed);\r\n    checkBoundary(num2Changed);\r\n    return times((num1Changed / num2Changed), Math.pow(10, digitLength(num2) - digitLength(num1)));\r\n}\r\n/**\r\n * 四舍五入\r\n */\r\nfunction round(num, ratio) {\r\n    var base = Math.pow(10, ratio);\r\n    return divide(Math.round(times(num, base)), base);\r\n}\r\nvar index = { strip: strip, plus: plus, minus: minus, times: times, divide: divide, round: round, digitLength: digitLength, float2Fixed: float2Fixed };\n\nexports.strip = strip;\nexports.plus = plus;\nexports.minus = minus;\nexports.times = times;\nexports.divide = divide;\nexports.round = round;\nexports.digitLength = digitLength;\nexports.float2Fixed = float2Fixed;\nexports['default'] = index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_number-precision@1.2.0@number-precision/build/index.js\n// module id = yLYF\n// module chunks = 1"],"sourceRoot":""}