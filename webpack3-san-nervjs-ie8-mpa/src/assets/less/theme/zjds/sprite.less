/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@clock-name: 'clock';
@clock-x: 150px;
@clock-y: 0px;
@clock-offset-x: -150px;
@clock-offset-y: 0px;
@clock-width: 189px;
@clock-height: 87px;
@clock-total-width: 439px;
@clock-total-height: 266px;
@clock-image: 'ico.png';
@clock: 150px 0px -150px 0px 189px 87px 439px 266px 'ico.png' 'clock';
@close-name: 'close';
@close-x: 384px;
@close-y: 173px;
@close-offset-x: -384px;
@close-offset-y: -173px;
@close-width: 43px;
@close-height: 43px;
@close-total-width: 439px;
@close-total-height: 266px;
@close-image: 'ico.png';
@close: 384px 173px -384px -173px 43px 43px 439px 266px 'ico.png' 'close';
@exit-name: 'exit';
@exit-x: 150px;
@exit-y: 87px;
@exit-offset-x: -150px;
@exit-offset-y: -87px;
@exit-width: 35px;
@exit-height: 35px;
@exit-total-width: 439px;
@exit-total-height: 266px;
@exit-image: 'ico.png';
@exit: 150px 87px -150px -87px 35px 35px 439px 266px 'ico.png' 'exit';
@exit-old-name: 'exit_old';
@exit-old-x: 185px;
@exit-old-y: 87px;
@exit-old-offset-x: -185px;
@exit-old-offset-y: -87px;
@exit-old-width: 31px;
@exit-old-height: 31px;
@exit-old-total-width: 439px;
@exit-old-total-height: 266px;
@exit-old-image: 'ico.png';
@exit-old: 185px 87px -185px -87px 31px 31px 439px 266px 'ico.png' 'exit_old';
@icon-main-ball-name: 'icon_main_ball';
@icon-main-ball-x: 0px;
@icon-main-ball-y: 0px;
@icon-main-ball-offset-x: 0px;
@icon-main-ball-offset-y: 0px;
@icon-main-ball-width: 150px;
@icon-main-ball-height: 141px;
@icon-main-ball-total-width: 439px;
@icon-main-ball-total-height: 266px;
@icon-main-ball-image: 'ico.png';
@icon-main-ball: 0px 0px 0px 0px 150px 141px 439px 266px 'ico.png' 'icon_main_ball';
@icon-side-ball-name: 'icon_side_ball';
@icon-side-ball-x: 339px;
@icon-side-ball-y: 0px;
@icon-side-ball-offset-x: -339px;
@icon-side-ball-offset-y: 0px;
@icon-side-ball-width: 100px;
@icon-side-ball-height: 103px;
@icon-side-ball-total-width: 439px;
@icon-side-ball-total-height: 266px;
@icon-side-ball-image: 'ico.png';
@icon-side-ball: 339px 0px -339px 0px 100px 103px 439px 266px 'ico.png' 'icon_side_ball';
@member-name: 'member';
@member-x: 339px;
@member-y: 103px;
@member-offset-x: -339px;
@member-offset-y: -103px;
@member-width: 70px;
@member-height: 70px;
@member-total-width: 439px;
@member-total-height: 266px;
@member-image: 'ico.png';
@member: 339px 103px -339px -103px 70px 70px 439px 266px 'ico.png' 'member';
@nav-name: 'nav';
@nav-x: 339px;
@nav-y: 173px;
@nav-offset-x: -339px;
@nav-offset-y: -173px;
@nav-width: 45px;
@nav-height: 45px;
@nav-total-width: 439px;
@nav-total-height: 266px;
@nav-image: 'ico.png';
@nav: 339px 173px -339px -173px 45px 45px 439px 266px 'ico.png' 'nav';
@plus-name: 'plus';
@plus-x: 380px;
@plus-y: 218px;
@plus-offset-x: -380px;
@plus-offset-y: -218px;
@plus-width: 39px;
@plus-height: 39px;
@plus-total-width: 439px;
@plus-total-height: 266px;
@plus-image: 'ico.png';
@plus: 380px 218px -380px -218px 39px 39px 439px 266px 'ico.png' 'plus';
@start-name: 'start';
@start-x: 0px;
@start-y: 141px;
@start-offset-x: 0px;
@start-offset-y: -141px;
@start-width: 130px;
@start-height: 125px;
@start-total-width: 439px;
@start-total-height: 266px;
@start-image: 'ico.png';
@start: 0px 141px 0px -141px 130px 125px 439px 266px 'ico.png' 'start';
@tab-red-name: 'tab_red';
@tab-red-x: 130px;
@tab-red-y: 141px;
@tab-red-offset-x: -130px;
@tab-red-offset-y: -141px;
@tab-red-width: 191px;
@tab-red-height: 82px;
@tab-red-total-width: 439px;
@tab-red-total-height: 266px;
@tab-red-image: 'ico.png';
@tab-red: 130px 141px -130px -141px 191px 82px 439px 266px 'ico.png' 'tab_red';
@tag-name: 'tag';
@tag-x: 130px;
@tag-y: 223px;
@tag-offset-x: -130px;
@tag-offset-y: -223px;
@tag-width: 33px;
@tag-height: 37px;
@tag-total-width: 439px;
@tag-total-height: 266px;
@tag-image: 'ico.png';
@tag: 130px 223px -130px -223px 33px 37px 439px 266px 'ico.png' 'tag';
@userinfo-name: 'userinfo';
@userinfo-x: 339px;
@userinfo-y: 218px;
@userinfo-offset-x: -339px;
@userinfo-offset-y: -218px;
@userinfo-width: 41px;
@userinfo-height: 40px;
@userinfo-total-width: 439px;
@userinfo-total-height: 266px;
@userinfo-image: 'ico.png';
@userinfo: 339px 218px -339px -218px 41px 40px 439px 266px 'ico.png' 'userinfo';
@spritesheet-width: 439px;
@spritesheet-height: 266px;
@spritesheet-image: 'ico.png';
@spritesheet-sprites: @clock @close @exit @exit-old @icon-main-ball @icon-side-ball @member @nav @plus @start @tab-red @tag @userinfo;
@spritesheet: 439px 266px 'ico.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
